/**
 * Created by ericjohndixon on 5/26/16.
 */
angular.module('mooVtrailers', [
        'angular-http-helper',
        'ngAnimate',
        'ngMaterial',
        'ngAria',
        'mooVtrailers.core',
        'mooVtrailers.apiServices'
    ])
    .run([function () {
        //IFRAME PLAYER SETUP
        var tag = document.createElement('script');
        tag.src = "http://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    }]);
angular.module('mooVtrailers.core', []);
angular.module('mooVtrailers.apiServices', []);
(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('movieSearchItem', ['$rootScope', 'YouTubeService', 'MtTheaterService', function ($rootScope, YouTubeService, MtTheaterService ) {
      return {
          restrict: 'E',
          link: linker,
          templateUrl: 'app/components/movie-search-item/movie-search-item-tpl.html',
          require: '^mtSearchBar',
          scope: {
              movie: '=movie'
          }
      };

      ////////////////////////////////////////////////////
      function linker(scope, element, attrs, ctrl) {
          scope.playQueue = function playQueue() {

              YouTubeService.getYouTubeIdByMovieItem(scope.movie).then(function(movieId){
                  if(movieId != 'No trailer found') {
                      ctrl.searchString = '';
                      MtTheaterService.theater.showTheater = true;
                      YouTubeService.playVideoById(movieId);
                  }
              });
              //$rootScope.$broadcast('play-queue', movieKey);
          };

      }

    }]);
})();
(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('mtHeader', [function () {
      return {
        restrict: 'E',
        controller: 'MtHeaderCtrl',
        controllerAs: 'mtHeader',
        templateUrl: 'app/components/mt-header/mt-header-tpl.html'
      };
    }])
    .controller('MtHeaderCtrl', [ 'MtTheaterService', '$scope', '$mdSidenav', function(MtTheaterService, $scope, $mdSidenav) {
        var mtHeader = this;
        $scope.theater = MtTheaterService.theater;
        $scope.openLeftMenu = function() {
            $mdSidenav('left').toggle();
        }
    }]);
})();

(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('mtLogo', [function () {
      return {
        restrict: 'E',
        link: linker,
        template: '<span class="logo logo__base-text">moo <span class="logo__accent-text">V</span> trailers</span>'
      };

        function linker() {

        }
    }])
})();

(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('mtPopularTitles', [function () {
      return {
        restrict: 'E',
        controller: 'MtPopularTitlesCtrl',
        controllerAs: 'mtPopularTitles',
        templateUrl: 'app/components/mt-popular-titles/mt-popular-titles-tpl.html'
      };
    }])
    .controller('MtPopularTitlesCtrl', ['RottenTomatoesService', function(RottenTomatoesService) {
        var mtPopularTitles = this;
        RottenTomatoesService.getUpcomingMovies().then(function(response){
            mtPopularTitles.upcomingMovies = response.data.movies;
        });
    }]);
})();
/**
 * Created by ericjohndixon on 6/1/16.
 */
(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('mtSearchBar', [function () {
        return {
            restrict: 'E',
            controller: 'MtSearchBarCtrl',
            controllerAs: 'mtSearchBar',
            bindToController: true,
            templateUrl: 'app/components/mt-search-bar/mt-search-bar-tpl.html'
        };
    }])
    .controller('MtSearchBarCtrl', ['RottenTomatoesService', '$scope', function(RottenTomatoesService, $scope) {
        var mtSearchBar = this;
        mtSearchBar.searchString = '';
        mtSearchBar.search = search;
        mtSearchBar.hideResults = false;

        function search() {
            RottenTomatoesService.getMoviesByQuery(mtSearchBar.searchString).then(function(response){
                mtSearchBar.movies = response.data.movies;
            });
        }

    }]);
})();



(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('mtTheater', [function () {
      return {
        restrict: 'E',
        controller: 'MtTheaterCtrl',
        controllerAs: 'mtTheater',
        templateUrl: 'app/components/mt-theater/mt-theater-tpl.html'
      };
    }])
    .controller('MtTheaterCtrl', ['$scope', 'MtTheaterService', function($scope, MtTheaterService) {
        var mtTheater = this;
        mtTheater.theater = MtTheaterService.theater;
        $scope.$on('play-queue', function(event, args) {
            mtTheater.thing = 'thing';
            // do what you want to do
        });
    }]);
})();
/**
 * Created by ericjohndixon on 6/2/16.
 */
(function () {
    'use strict';

    angular
        .module('mooVtrailers')
        .factory('MtTheaterService', MtTheaterService);
    //MtTheaterService.$inject = [''];

    //FACTORY METHOD
    function MtTheaterService() {
        return {
            theater : {
                showTheater: false,
                noTrailerAvailable: false,
                searchOnTop: false
            }
        }
    }
})();
/**
 * Created by ericjohndixon on 6/10/16.
 */
(function () {
  'use strict';

  angular.module('mooVtrailers.core')
    .directive('offElementClick', ['$document', function ($document) {
      return {
        restrict: 'A',
        link: linker
      };

      ////////////////////////////////////////////////////
      function linker($scope, $element, $attributes) {
          var scopeExpression = $attributes.offElementClick,
              onDocumentClick = function (event) {
                  var isChild = jQuery($element).find(event.target).length > 0;

                  if (!isChild) {
                      $scope.$apply(scopeExpression);
                  }
              };

          $document.on("click", onDocumentClick);

          $element.on('$destroy', function () {
              $document.off("click", onDocumentClick);
          });

      }

    }]);
})();
/**
 * Created by ericjohndixon on 6/2/16.
 */
(function () {
    'use strict';

    angular
        .module('mooVtrailers.apiServices')
        .factory('RottenTomatoesService', RottenTomatoesService);
    RottenTomatoesService.$inject = ['HttpHelper'];
    
    //FACTORY METHOD
    function RottenTomatoesService(HttpHelper) {
        return {
            getMoviesByQuery : getMoviesByQuery,
            getUpcomingMovies: getUpcomingMovies
        };
        /////////////////////////////////////////////////////////    


        function getMoviesByQuery(queryString) {
            return HttpHelper.jsonp('http://api.rottentomatoes.com/api/public/v1.0/movies.json?apikey=u89xcs2pkzy49hwmf9f43j8y&q=' + queryString + '&page_limit=4&callback=JSON_CALLBACK', true, 'movie-query');
        }

        function getUpcomingMovies() {
            return HttpHelper.jsonp('http://api.rottentomatoes.com/api/public/v1.0/lists/movies/upcoming.json?apikey=u89xcs2pkzy49hwmf9f43j8y&callback=JSON_CALLBACK', true, 'upcoming-movies');
        }
    }
})();
/**
 * Created by ericjohndixon on 6/16/16.
 */
(function () {
    'use strict';

    angular
        .module('mooVtrailers.apiServices')
        .factory('TmdbService', TmdbService);
    TmdbService.$inject = ['HttpHelper'];

    //FACTORY METHOD
    function TmdbService(HttpHelper) {
        return {
            getMoviesByQuery : getMoviesByQuery
        };
        /////////////////////////////////////////////////////////
        function getMoviesByQuery(query) {
            return HttpHelper.get('http://api.themoviedb.org/3/search/movie?api_key=98a62afbdaaba0e0968f74212a9f7561&&include_adult=falsequery=' + query);
        }
    }
})();
/**
 * Created by ericjohndixon on 6/2/16.
 */
(function () {
    'use strict';

    angular
        .module('mooVtrailers.apiServices')
        .factory('YouTubeService', YouTubeService);
    YouTubeService.$inject = ['HttpHelper', '$window'];

    //FACTORY METHOD
    function YouTubeService(HttpHelper, $window) {
        var player;
        init();
        return {
            getYouTubeByQuery : getYouTubeByQuery,
            getYouTubeIdByMovieItem: getYouTubeIdByMovieItem,
            playVideoById : playVideoById
        };
        /////////////////////////////////////////////////////////
        function getYouTubeByQuery(queryString) {
            return HttpHelper.jsonp('https://www.googleapis.com/youtube/v3/search?part=snippet&q=' + queryString  + '&key=AIzaSyCcE9Fjlo5d-4gpRJkZ97a7KFB2k8pvcaM&callback=JSON_CALLBACK', true, 'youtube-query');
        }

        function getYouTubeIdByMovieItem(movie) {
            var queryString = movie.title + ' (' + movie.year + ') trailer';
            return getYouTubeByQuery(queryString).then(function(response){
                return extractKey(movie, response);
            });
        }

        function extractKey(movie, response) {
            //Look at all results
            var youtubeItems = response.data.items;
            for(var i = 0; i < youtubeItems.length; i++) {
                var titleCompareString = youtubeItems[i].snippet.title.toLowerCase();
                if(titleCompareString.includes(movie.title.toLowerCase()) && titleCompareString.includes(movie.year.toString().toLowerCase()) && titleCompareString.includes('trailer')){
                    return youtubeItems[i].id.videoId;
                }
            }
            return 'No trailer found';
        }

        function playVideoById(id) {
            player.loadVideoById(id);
        }

        /*****************************************************************************************************
         * INIT
         *****************************************************************************************************/
         function init() {
            //height: '550',
            //    width: '1100'
            $window.onYouTubeIframeAPIReady = function() {
                player = new YT.Player('player', {
                    height: '390',
                    width: '640'
                });
            };
        }
        //"items": [
        //    {
        //        "kind": "youtube#searchResult",
        //        "etag": "\"mie-I9wWQF7ndS7wC10DLBkzLlg/-UURu2szaOIX4O6Uq1IxiM5p9JQ\"",
        //        "id": {
        //            "kind": "youtube#video",
        //            "videoId": "GokKUqLcvD8"
        //        },
        //        "snippet": {
        //            "publishedAt": "2011-12-19T18:17:09.000Z",
        //            "channelId": "UCkR0GY0ue02aMyM-oxwgg9g",
        //            "title": "The Dark Knight Rises Official Movie Trailer Christian Bale, Batman Movie (2012) HD",
        //            "description": "Subscribe to TRAILERS: http://bit.ly/sxaw6h Subscribe to COMING SOON: http://bit.ly/H2vZUn Like us on FACEBOOK: http://goo.gl/dHs73 Follow us on ...",
        //            "thumbnails": {
        //                "default": {
        //                    "url": "https://i.ytimg.com/vi/GokKUqLcvD8/default.jpg",
        //                    "width": 120,
        //                    "height": 90
        //                },
        //                "medium": {
        //                    "url": "https://i.ytimg.com/vi/GokKUqLcvD8/mqdefault.jpg",
        //                    "width": 320,
        //                    "height": 180
        //                },
        //                "high": {
        //                    "url": "https://i.ytimg.com/vi/GokKUqLcvD8/hqdefault.jpg",
        //                    "width": 480,
        //                    "height": 360
        //                }
        //            },
        //            "channelTitle": "Movieclips Coming Soon",
        //            "liveBroadcastContent": "none"
        //        }
        //    },
    }
})();
/**
 * Created by ericjohndixon on 6/2/16.
 */
(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('mtPopularTitle', ['YouTubeService', 'MtTheaterService', function (YouTubeService, MtTheaterService) {
      return {
          restrict: 'E',
          link: linker,
          scope: {
              upcomingMovie: '=upcomingMovie'
          },
          templateUrl: 'app/components/mt-popular-titles/mt-popular-title/mt-popular-title-tpl.html'
      };

      ////////////////////////////////////////////////////
      function linker(scope, element, attrs) {
          scope.playTrailer = function() {
              YouTubeService.getYouTubeIdByMovieItem(scope.upcomingMovie).then(function(movieId){
                  if(movieId != 'No trailer found') {
                      MtTheaterService.theater.searchOnTop = true;
                      MtTheaterService.theater.showTheater = true;
                      YouTubeService.playVideoById(movieId);
                  }
              });
          }
      }

    }]);
})();
/**
 * Created by ericjohndixon on 6/1/16.
 */
(function () {
  'use strict';

  angular.module('mooVtrailers')
    .directive('youtubePlayer', ['$window', '$rootScope', function ($window, $rootScope) {
        return {
            restrict: 'E',
            link: linker,
            template: '<section id="player"></section>'
        };

        function linker(scope, element, attr) {

            // 3. This function creates an <iframe> (and YouTube player)
            scope.loadNewVideo = loadNewVideo;
            //    after the API code downloads.

            scope.$on('play-queue', function(event, args) {
                loadNewVideo(args);
                // do what you want to do
            });

            //height: '390',
            //width: '640',
            var player;
            //$window.onYouTubeIframeAPIReady = function() {
            //    player = new YT.Player('player', {
            //        height: '550',
            //        width: '1100',
            //        videoId: 'M7lc1UVf-VE',
            //        events: {
            //            'onReady': onPlayerReady,
            //            'onStateChange': onPlayerStateChange
            //        }
            //    });
            //};

            // 4. The API will call this function when the video player is ready.
            $window.onPlayerReady = function (event) {
                //event.target.playVideo();
            };

            // 5. The API calls this function when the player's state changes.
            //    The function indicates that when playing a video (state=1),
            //    the player should play for six seconds and then stop.
            var done = false;
            $window.onPlayerStateChange = function (event) {
                if (event.data == YT.PlayerState.PLAYING && !done) {
                    setTimeout(stopVideo, 6000);
                    done = true;
                }
            };
            function stopVideo() {
                player.stopVideo();
            }

            function loadNewVideo(id) {
                player.loadVideoById(id);
                //player.loadPlaylist(['UgBBitvVHAg', 'EXeTwQWrcwY']);
            }


        }
    }])
})();

angular.module("mooVtrailers").run(["$templateCache", function($templateCache) {$templateCache.put("app/components/movie-search-item/movie-search-item-tpl.html","<section class=\"mt-container mt-container--gray movie-search-item\">\n    <div class=\"mt-poster\" ng-click=\"playQueue()\">\n        <span><i class=\"fa fa-play-circle icon__clickable--white\"></i></span>\n        <img width=\"75px\" height=\"110px\" ng-src=\"{{movie.posters.original}}\">\n    </div>\n    <div class=\"movie-search-item__details\">\n        <div class=\"heading-4\">{{movie.title}} ({{movie.year}}) </div>\n\n        <div class=\"movie-search-item__synopsis\">\n            <span ng-if=\"movie.synopsis\">\n                {{movie.synopsis}}\n            </span>\n            <span ng-if=\"!movie.synopsis\">\n                (No synopsis available)\n            </span>\n        </div>\n    </div>\n    <div class=\"movie-search-item__last-section\">\n        <div class=\"flex-end-to-end\">\n            <div class=\"movie-search-item__mpaa-rating\">{{movie.mpaa_rating}}</div>\n            <div class=\"movie-search-item__add icon__clickable--white\">\n                <i class=\"fa fa-plus-circle\"></i>\n            </div>\n        </div>\n\n        <div class=\"movie-search-item__ratings\">\n            <!--CRITICS RATING-->\n            <div class=\"icon\"\n                 ng-class=\"{\'icon--tomato\' : movie.ratings.critics_rating == \'Fresh\', \'icon--rotten-tomato\' : movie.ratings.critics_rating == \'Rotten\', \'icon--certified-fresh\' : movie.ratings.critics_rating == \'Certified Fresh\'}\"\n                 ng-if=\"movie.ratings.critics_score != -1\">\n            </div>\n            <div class=\"movie-search-item__rating-percent\" ng-if=\"movie.ratings.critics_score != -1\"> {{movie.ratings.critics_score}}%</div>\n\n            <!--AUDIENCE RATING-->\n            <div class=\"icon icon--popcorn\"\n                 ng-class=\"{\'icon--popcorn\' : movie.ratings.audience_rating == \'Upright\', \'icon--tipped-popcorn\' : movie.ratings.audience_rating == \'Spilled\'}\"\n                 ng-if=\"movie.ratings.audience_score != -1\"></div>\n            <div class=\"movie-search-item__rating-percent\" ng-if=\"movie.ratings.audience_score != -1\">{{movie.ratings.audience_score}}%</div>\n        </div>\n    </div>\n\n</section>");
$templateCache.put("app/components/mt-header/mt-header-tpl.html","<section class=\"mt-header\"\n         ng-class=\"{\'header--flex\' : theater.searchOnTop}\">\n    <mt-logo></mt-logo>\n    <mt-search-bar></mt-search-bar>\n\n    <!--<md-sidenav md-component-id=\"left\" class=\"md-sidenav-left\">-->\n        <!--Left Nav!-->\n    <!--</md-sidenav>-->\n    <!--<md-content>-->\n        <!--Center Content-->\n        <!--<md-button ng-click=\"openLeftMenu()\">-->\n            <!--Open Left Menu-->\n        <!--</md-button>-->\n    <!--</md-content>-->\n    <!--<md-sidenav md-component-id=\"right\" md-is-locked-open=\"$mdMedia(\'min-width: 333px\')\" class=\"md-sidenav-right\">-->\n        <!--<form>-->\n            <!--<md-input-container>-->\n                <!--<label for=\"testInput\">Test input</label>-->\n                <!--<input id=\"testInput\" type=\"text\" ng-model=\"data\" md-autofocus>-->\n            <!--</md-input-container>-->\n        <!--</form>-->\n    <!--</md-sidenav>-->\n\n</section>");
$templateCache.put("app/components/mt-popular-titles/mt-popular-titles-tpl.html","<section class=\"layout__inner-padding--small\">\n    <h2>Upcoming Movies</h2>\n    <section class=\"mt-popular-titles__container\">\n\n\n            <mt-popular-title ng-repeat=\"upcomingMovie in mtPopularTitles.upcomingMovies\" upcoming-movie=\"upcomingMovie\"></mt-popular-title>\n\n    </section>\n</section>");
$templateCache.put("app/components/mt-search-bar/mt-search-bar-tpl.html","\n<section class=\"mt-search-bar\" ng-class=\"{\'initial-search-bar\': !theater.searchOnTop}\" off-element-click=\"mtSearchBar.hideResults = true\">\n    <!--Search Input-->\n    <h1 ng-if=\"!theater.searchOnTop\" class=\"hidden-sm\">Search Movie Trailers</h1>\n    <input id=\"mt-search-input\"\n           autofocus\n           class=\"input__main--large hidden-sm\"\n           type=\"text\"\n           ng-model=\"mtSearchBar.searchString\"\n           ng-focus=\"mtSearchBar.hideResults = false\"\n           placeholder=\"Enter Title\"\n           ng-change=\"theater.searchOnTop = true; mtSearchBar.search()\">\n\n    <input id=\"mt-mobile-search-input\"\n           autofocus\n           class=\"input__main--large visible-sm-only\"\n           type=\"text\"\n           ng-model=\"mtSearchBar.searchString\"\n           ng-focus=\"mtSearchBar.hideResults = false\"\n           placeholder=\"Enter Title\"\n           ng-show=\"theater.searchOnTop\"\n           ng-change=\"mtSearchBar.search()\">\n\n\n    <!--Movie Trailer Search Results-->\n    <section class=\"mt-search-results__container\" ng-hide=\"mtSearchBar.hideResults\" ng-if=\"mtSearchBar.searchString != \'\'\">\n        <div class=\"mt-container__spacer\" ng-repeat=\"movie in mtSearchBar.movies\">\n            <movie-search-item movie=\"movie\" ></movie-search-item>\n        </div>\n    </section>\n</section>");
$templateCache.put("app/components/mt-theater/mt-theater-tpl.html","<section class=\"mt-video-container\">\n    <div ng-show=\"mtTheater.theater.showTheater\">\n        <section id=\"player\"></section>\n    </div>\n</section>");
$templateCache.put("app/components/mt-popular-titles/mt-popular-title/mt-popular-title-tpl.html","<section class=\"mt-poster-container mt-poster card-1\"\n         ng-click=\"playTrailer()\"\n         ng-mouseover=\"showTitle = true;\"\n         ng-mouseout=\"showTitle = false;\">\n    <div class=\"mt-popular-title__title\" ng-show=\"showTitle\">{{upcomingMovie.title}}</div>\n    <i class=\"fa fa-play-circle icon__clickable--white\"></i>\n    <img width=\"75px\" height=\"110px\" ng-src=\"{{upcomingMovie.posters.original}}\">\n</section>");}]);
//# sourceMappingURL=mooVtrailers.1.0.0-0.min.js.map
